fn main() {
    println!("Each new term in the Fibonacci sequence is generated by adding");
    println!("the previous two terms. By starting with 1 and 2, the first 10");
    println!("will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...\n");

    println!("By considering the terms in the Fibonacci sequence whose values");
    print!("do not exceed four million, find the sum of the even-valued");
    println!(" terms.\n");

    let mut sum: i128 = 0;
    let mut second_previous: i64 = 1;
    let mut previous: i64 = 2;
    let mut temporary: i64 = fibonacci(second_previous, previous);

    while temporary <= 4000000 {
        if temporary % 2 == 0 {
            sum = sum + (temporary as i128);
        }
        second_previous = previous;
        previous = temporary;
        temporary = fibonacci(second_previous, previous);
    }

    println!("The sum of even-valued terms is {}.", sum);
}

fn fibonacci(second_previous: i64, previous: i64) -> i64 {
    return second_previous + previous;
}
